# Simple workflow for deploying static content to GitHub Pages
name: Deploy Discord DEB to PPA repo

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  workflow_dispatch:
  schedule:
    - cron: "0 0,6,12,18 * * *"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
      - name: Install Some Dependencies
        run: |
          sudo apt-get install dpkg-dev
      - name: Import GPG key
        id: gpg_key_import
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ vars.PRIVATE_KEY }}
          passphrase: ${{ secrets.KEY_PASSPHRASE }}
      - name: Export the Public Key
        run: |
          gpg --output discordapt.gpg --armor --export $KEYNAME
        env:
          KEYNAME: ${{ steps.gpg_key_import.outputs.keyid }}
      - name: Get Latest Discord DEB
        run: |
          wget "https://discord.com/api/download?platform=linux&format=deb" -O discord.deb
      - name: Setup Debian Repository
        run: |
          dpkg-scanpackages --multiversion . > Packages
          gzip -k -f Packages
          apt-ftparchive release . >> Release
          echo $KEY_PASSPHRASE | gpg --yes --passphrase-fd 0 --default-key $KEYNAME -abs -o - Release > Release.gpg
          echo $KEY_PASSPHRASE | gpg --yes --passphrase-fd 0 --default-key $KEYNAME --clearsign -o - Release > InRelease
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/discordapt.gpg] https://grandmoff100.github.io/DiscordAPT/ ./" > discordapt.list
          # ls -hlA | tr '\n' '\\' | sed 's/\\/ <br\/>/g' > index.html
        env:
          KEY_PASSPHRASE: ${{ secrets.KEY_PASSPHRASE }}
          KEYNAME: ${{ steps.gpg_key_import.outputs.keyid }}
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
